{"version":3,"sources":["components/Pokemon/Pokemon.module.css","containers/Pokedex.module.css","components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css","components/PokemonSummary/PokemonSummary.module.css","components/Header/Header.module.css","hoc/Aux.js","components/Pokemon/Pokemon.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/PokemonSummary/PokemonSummary.js","containers/Pokedex.js","components/Header/Header.js","components/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Pokemon","Pokedex","Modal","Backdrop","PokemonSummary","Header","aux","props","children","pokemon","react_default","a","createElement","className","classes","onClick","clicked","src","image","alt","name","backdrop","show","modal","Aux","modalClosed","style","transform","opacity","pokemonSummary","sprite","id","height","weight","state","results","names","urls","imgResults","sprites","display","selected","selectedName","selectedWeight","selectedSprite","selectedHeight","displayOpenHandler","index","axios","get","_this","then","response","setState","data","displayExitHandler","_this2","this","map","result","push","url","concat","i","length","front_default","sort","b","exec","_this3","pokemons","pkmnKey","key","Component","header","layout","App","Layout","containers_Pokedex","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8c664a8c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pokemon\":\"Pokemon_Pokemon__MMNV-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pokedex\":\"Pokedex_Pokedex__2a_cE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PokemonSummary\":\"PokemonSummary_PokemonSummary__3ScCE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2C_Ub\"};","const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\n\nimport classes from './Pokemon.module.css';\n\nconst pokemon = ( props ) => {\n\n    return(\n        <div \n            className={classes.Pokemon}\n            onClick={props.clicked}>\n            <img src={props.image} alt=\"Pkmn_img\"/>\n            <hr/>\n            <p>{props.name}</p>\n        </div>\n    )\n};\n\nexport default pokemon;","import React from 'react';\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n)\n\nexport default backdrop;","import React from 'react';\n\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/Aux';\nimport Backdrop from  '../Backdrop/Backdrop';\n\nconst modal = (props) => (\n    <Aux>\n        <Backdrop show={props.show} clicked={props.modalClosed}/>\n        <div\n            className = {classes.Modal}\n            style = {{\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                opacity: props.show ? '1' : '0'\n            }}>\n            {props.children}\n        </div>\n    </Aux>\n);\n\nexport default modal;","import React from 'react';\nimport Aux from '../../hoc/Aux';\nimport classes from './PokemonSummary.module.css';\n\nconst pokemonSummary = (props) => (\n    <Aux>\n            {/* <img src ={props.sprite} alt=\"pkmn_sprite\"/> */}\n            <img src ={props.sprite} alt=\"pkmn_sprite\"/>\n\n        <div className={classes.PokemonSummary}>\n            <h3>ID: {props.id} {props.name}</h3>\n            <p>HT: {props.height / 10} M</p>\n            <p>WT: {props.weight / 10} KG</p>\n        </div>\n    </Aux>\n);\n\nexport default pokemonSummary;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Aux from '../hoc/Aux';\nimport Pokemon from '../components/Pokemon/Pokemon';\nimport classes from './Pokedex.module.css';\nimport Modal from '../components/UI/Modal/Modal';\nimport PokemonSummary from '../components/PokemonSummary/PokemonSummary';\n\nclass Pokedex extends Component{\n    state = {\n        results: [],\n        names: [],\n        urls: [],\n        imgResults: [],\n        sprites: [],\n        display: false,\n        selected : [],\n        selectedName: '',\n        selectedWeight: '',\n        selectedSprite: '',\n        selectedHeight: ''\n    }\n\n    componentDidMount(){\n        axios.get('https://pokeapi.co/api/v2/pokemon/?limit=151/')\n            .then(response =>{\n                // console.log(response);\n                this.setState({\n                    results: response.data.results\n                    // sprite: response.data.sprites.front_default\n                });\n\n                //GRABS THE NAMES AND URLS FOR EACH POKEMON\n                let names = [];\n                let urls = [];\n                this.state.results.map(result => {\n                    return names.push(result.name);\n                })\n                this.state.results.map(result => {\n                    return urls.push(result.url);\n                })\n            \n                this.setState({\n                    names: [...names],\n                    urls: [...urls]\n                })\n                \n                //LOOKUP FOR EACH POKEMON TO GRAB THEIR RESPECTIVE SPRITE\n                let sprites = [];\n                for (let i = 0; i < this.state.urls.length; i++){\n                    axios.get(this.state.urls[i])\n                        .then(response=>{\n                            this.setState({\n                                imgResults: response.data.sprites\n                            })\n                            sprites.push(this.state.imgResults.front_default);\n\n                            //Natural sort for array of strings, failsafe for promises\n                            sprites.sort(function(a, b) {\n                                return +/\\d+/.exec(a)[0] - +/\\d+/.exec(b)[0];\n                              });\n\n                            this.setState({\n                                sprites: [...sprites]\n                            })\n                    \n                            \n                        })\n                    // sprites.push(this.state.imgResults.front_default);\n            \n                }\n                \n            });\n\n    }\n\n    displayOpenHandler = (index) =>{\n        axios.get(this.state.urls[index])\n            .then(response=>{\n                this.setState({selected: response.data})\n            })\n        this.setState({\n            display: true,\n            selectedName: this.state.names[index],\n            selectedSprite: this.state.sprites[index]\n        })\n    }\n\n    displayExitHandler = () =>{\n        this.setState({display: false})\n    }\n\n\n    render(){\n       \n        // WHERE I MAP ALL POKEMON AFTER OBTAINING EVERY NAME\n        const pokemons = this.state.results.map((result,pkmnKey) => {\n            return <Pokemon \n                name = {result.name}\n                key = {pkmnKey}\n                image = {this.state.sprites[pkmnKey]}\n                clicked = {() =>this.displayOpenHandler(pkmnKey)}\n            />;\n        });\n        return(\n            <Aux>\n                <Modal show={this.state.display} modalClosed={this.displayExitHandler}>\n                    <PokemonSummary \n                        id={this.state.selected.id}\n                        name={this.state.selectedName}\n                        sprite={this.state.selectedSprite}\n                        height={this.state.selected.height}\n                        weight={this.state.selected.weight}\n                        >\n\n                    </PokemonSummary>\n                </Modal>\n                <div className={classes.Pokedex}>\n                    {/* <Pokemon \n                        image={this.state.sprite}\n                        name={this.state.pokemon}\n                        /> */}\n                    {pokemons}\n                </div>\n            </Aux>\n        );\n    }\n}\n\nexport default Pokedex;","import React from 'react';\n\nimport classes from './Header.module.css';\n\nconst header = (props) => {\n    return(\n        <div className={classes.Header}>\n            <h1>Pokédex!</h1>\n            <h2>Built using ReactJS</h2>\n\n            <h3>1ST GEN PKMN ONLY!</h3>\n        </div>\n    )\n}\n\nexport default header;","import React from 'react';\n\nimport Aux from '../../hoc/Aux';\nimport Header from '../Header/Header';\n\nconst layout = (props) => (\n    <Aux>\n        <Header />\n        <main>{props.children}</main>\n    </Aux>\n);\n\nexport default layout;","import React from 'react';\nimport './App.css';\n\nimport Pokedex from './containers/Pokedex';\nimport Layout from './components/Layout/Layout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Pokedex></Pokedex>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}